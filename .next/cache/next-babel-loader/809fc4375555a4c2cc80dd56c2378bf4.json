{"ast":null,"code":"var _jsxFileName = \"/home/vinicius/code/computers-4-all-manager/pwa/src/components/Authentication/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport api from '../../services/api';\nimport Authentication from './Authentication';\nconst signSchema = Yup.object().shape({\n  email: Yup.string().email('Insira um e-mail válido').required('O email é obrigatório'),\n  password: Yup.string().min(6, 'A senha deve ter no mínimo 6 caracteres').required('A senha é obrigatória')\n});\n/**\n * Container responsável pela autenticação do usuário e exibição do formulário\n * de autenticação caso o usuário não esteja logado no sistema.\n *\n * @returns {React} Layout do sistema caso logado ou formulário de autenticação,\n * caso o contrário\n */\n\nfunction AuthenticationContainer() {\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  const history = useHistory();\n\n  const saveUser = (token, user) => {\n    localStorage.setItem('user', JSON.stringify({\n      token,\n      email: user.email,\n      role: user.role,\n      signed: true\n    }));\n    history.push('/');\n  };\n\n  const handleSubmit = async values => {\n    const payload = {\n      email: values.email,\n      password: values.password\n    };\n\n    if (values.submit === 'login') {\n      try {\n        const response = await api.post('/users/login', payload);\n\n        if (response.status === 200) {\n          const {\n            token,\n            user\n          } = response.data;\n          saveUser(token, user);\n        }\n      } catch (err) {\n        if (err.response) {\n          setError(err.response.data.error);\n        } else {\n          setError('Falhas ao tentar se comunicar com o servidor.');\n        }\n      }\n\n      return;\n    }\n\n    if (values.submit === 'signup') {\n      try {\n        const response = await api.post('/users/signup', payload);\n\n        if (response.status === 200) {\n          const {\n            token,\n            user\n          } = response.data;\n          saveUser(token, user);\n        }\n      } catch (err) {\n        if (err.response) {\n          setError(err.response.statusText);\n        } else {\n          setError('Falhas ao tentar se comunicar com o servidor.');\n        }\n      }\n\n      return;\n    }\n  };\n\n  return __jsx(Authentication, {\n    onSubmit: handleSubmit,\n    schema: signSchema,\n    errorMessage: error,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 10\n    }\n  });\n}\n\nexport default AuthenticationContainer;","map":{"version":3,"sources":["/home/vinicius/code/computers-4-all-manager/pwa/src/components/Authentication/index.js"],"names":["React","useState","useHistory","Yup","api","Authentication","signSchema","object","shape","email","string","required","password","min","AuthenticationContainer","error","setError","history","saveUser","token","user","localStorage","setItem","JSON","stringify","role","signed","push","handleSubmit","values","payload","submit","response","post","status","data","err","statusText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\n\nimport api from '../../services/api';\n\nimport Authentication from './Authentication';\n\nconst signSchema = Yup.object().shape({\n  email: Yup.string()\n    .email('Insira um e-mail válido')\n    .required('O email é obrigatório'),\n  password: Yup.string()\n    .min(6, 'A senha deve ter no mínimo 6 caracteres')\n    .required('A senha é obrigatória')\n});\n\n/**\n * Container responsável pela autenticação do usuário e exibição do formulário\n * de autenticação caso o usuário não esteja logado no sistema.\n *\n * @returns {React} Layout do sistema caso logado ou formulário de autenticação,\n * caso o contrário\n */\nfunction AuthenticationContainer() {\n  const [error, setError] = useState(null);\n  const history = useHistory();\n\n  const saveUser = (token, user) => {\n    localStorage.setItem(\n      'user',\n      JSON.stringify({\n        token,\n        email: user.email,\n        role: user.role,\n        signed: true\n      })\n    );\n    history.push('/');\n  };\n\n  const handleSubmit = async values => {\n    const payload = {\n      email: values.email,\n      password: values.password\n    };\n\n    if (values.submit === 'login') {\n      try {\n        const response = await api.post('/users/login', payload);\n        if (response.status === 200) {\n          const { token, user } = response.data;\n          saveUser(token, user);\n        }\n      } catch (err) {\n        if (err.response) {\n          setError(err.response.data.error);\n        } else {\n          setError('Falhas ao tentar se comunicar com o servidor.');\n        }\n      }\n      return;\n    }\n    if (values.submit === 'signup') {\n      try {\n        const response = await api.post('/users/signup', payload);\n        if (response.status === 200) {\n          const { token, user } = response.data;\n          saveUser(token, user);\n        }\n      } catch (err) {\n        if (err.response) {\n          setError(err.response.statusText);\n        } else {\n          setError('Falhas ao tentar se comunicar com o servidor.');\n        }\n      }\n      return;\n    }\n  };\n\n  return <Authentication onSubmit={handleSubmit} schema={signSchema} errorMessage={error} />;\n}\n\nexport default AuthenticationContainer;\n"]},"metadata":{},"sourceType":"module"}