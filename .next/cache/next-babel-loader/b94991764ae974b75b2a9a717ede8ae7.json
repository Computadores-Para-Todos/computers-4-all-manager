{"ast":null,"code":"import { Model, Op, STRING, ENUM } from 'sequelize';\nimport { encrypt } from '../utils';\nimport { User, Status, Device } from '.';\n/**\n * Model de usuário\n * @exports\n * @class UserModel\n * @augments {Model}\n * @see https://codewithhugo.com/using-es6-classes-for-sequelize-4-models/\n */\n\nexport default class Activity extends Model {\n  // Cria instância do model\n  static init(sequelize) {\n    return super.init({\n      activity: {\n        type: ENUM('status', 'user'),\n        allowNull: false,\n        validate: {\n          // Valida se a chave estrangeira da respectiva atividade foi informada\n          validActivity(value) {\n            if (value === 'status' && !this.StatusId || value === 'user' && !this.UserId) throw new Error(`${value}Id não foi informado`);\n          }\n\n        }\n      }\n    }, {\n      sequelize,\n      updatedAt: false\n    });\n  }\n  /**\n   * Cria relacionamentos\n   * @static\n   * @memberof Device\n   * @returns {void}\n   */\n\n\n  static associate() {\n    // User relation\n    this.belongsTo(User); // Status relation\n\n    this.belongsTo(Status); // Device relation\n\n    this.belongsTo(Device, {\n      foreignKey: {\n        allowNull: false\n      },\n      onDelete: 'cascade'\n    });\n  }\n\n}","map":{"version":3,"sources":["/home/vinicius/code/computers-4-all-manager/api/src/models/ActivityModel.js"],"names":["Model","Op","STRING","ENUM","encrypt","User","Status","Device","Activity","init","sequelize","activity","type","allowNull","validate","validActivity","value","StatusId","UserId","Error","updatedAt","associate","belongsTo","foreignKey","onDelete"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,EAAhB,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,WAAxC;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,GAArC;AAEA;;;;;;;;AAOA,eAAe,MAAMC,QAAN,SAAuBR,KAAvB,CAA6B;AAC1C;AACA,SAAOS,IAAP,CAAYC,SAAZ,EAAuB;AACrB,WAAO,MAAMD,IAAN,CACL;AACEE,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAET,IAAI,CAAC,QAAD,EAAW,MAAX,CADF;AAERU,QAAAA,SAAS,EAAE,KAFH;AAGRC,QAAAA,QAAQ,EAAE;AACR;AACAC,UAAAA,aAAa,CAACC,KAAD,EAAQ;AACnB,gBACGA,KAAK,KAAK,QAAV,IAAsB,CAAC,KAAKC,QAA7B,IACCD,KAAK,KAAK,MAAV,IAAoB,CAAC,KAAKE,MAF7B,EAIE,MAAM,IAAIC,KAAJ,CAAW,GAAEH,KAAM,sBAAnB,CAAN;AACH;;AARO;AAHF;AADZ,KADK,EAiBL;AAAEN,MAAAA,SAAF;AAAaU,MAAAA,SAAS,EAAE;AAAxB,KAjBK,CAAP;AAmBD;AAED;;;;;;;;AAMA,SAAOC,SAAP,GAAmB;AACjB;AACA,SAAKC,SAAL,CAAejB,IAAf,EAFiB,CAGjB;;AACA,SAAKiB,SAAL,CAAehB,MAAf,EAJiB,CAKjB;;AACA,SAAKgB,SAAL,CAAef,MAAf,EAAuB;AACrBgB,MAAAA,UAAU,EAAE;AAAEV,QAAAA,SAAS,EAAE;AAAb,OADS;AAErBW,MAAAA,QAAQ,EAAE;AAFW,KAAvB;AAID;;AAxCyC","sourcesContent":["import { Model, Op, STRING, ENUM } from 'sequelize';\nimport { encrypt } from '../utils';\nimport { User, Status, Device } from '.';\n\n/**\n * Model de usuário\n * @exports\n * @class UserModel\n * @augments {Model}\n * @see https://codewithhugo.com/using-es6-classes-for-sequelize-4-models/\n */\nexport default class Activity extends Model {\n  // Cria instância do model\n  static init(sequelize) {\n    return super.init(\n      {\n        activity: {\n          type: ENUM('status', 'user'),\n          allowNull: false,\n          validate: {\n            // Valida se a chave estrangeira da respectiva atividade foi informada\n            validActivity(value) {\n              if (\n                (value === 'status' && !this.StatusId) ||\n                (value === 'user' && !this.UserId)\n              )\n                throw new Error(`${value}Id não foi informado`);\n            }\n          }\n        }\n      },\n      { sequelize, updatedAt: false }\n    );\n  }\n\n  /**\n   * Cria relacionamentos\n   * @static\n   * @memberof Device\n   * @returns {void}\n   */\n  static associate() {\n    // User relation\n    this.belongsTo(User);\n    // Status relation\n    this.belongsTo(Status);\n    // Device relation\n    this.belongsTo(Device, {\n      foreignKey: { allowNull: false },\n      onDelete: 'cascade'\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}